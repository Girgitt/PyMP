#!/usr/bin/env python
# coding=utf-8

import argparse
import configobj
import logging
import sys
import os
import socket

from multiprocessing.reduction import reduce_handle

sys.path.append('.')

from mysql_proto.engine import Engine

def main():
    # Setup arg handling
    parser = argparse.ArgumentParser(description='Python MySQL Proxy')
    # TODO: Set this to default to a sane path
    parser.add_argument('-c', '--config', default='conf/pymp.conf')

    args = parser.parse_args()

    # Initialize Config
    config = configobj.ConfigObj(os.path.abspath(args.config))
        
    # Start listening to port...
    serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    serversocket.bind((config['pymp']['ip'],
                       int(config['pymp']['port'])))
    serversocket.listen(int(
        config['pymp']['max_outstanding_connection_requests']))
    
    try:
        while True:
            (clientsocket, address) = serversocket.accept()
            Engine(config, reduce_handle(clientsocket.fileno())).start()
    finally:
        serversocket.close()

if __name__ == "__main__":
    main()
